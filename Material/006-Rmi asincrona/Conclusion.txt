
Es posible hacer llamadas de Rmi de forma Asincrona, pero 
es necesario usar clases java ajenas a rmi. 
Y cambiarle la estructura de los programas y su funcionamiento.

En las 2 tesis se proponen alternativas para lograr un Rmi Asincrono
FlexRmi, y CentiJ y su funcionamiento y estructura.


Es decir que Rmi (Remote procedural call) por si solo no sirve para hacer llamadas Asincronas, ya que esta diseñado para hacerse de forma procedural.



Errores que lo impiden----------------------------------------------

El problema de la RMI puede dividirse en tres subproblemas. El primero se denomina problema del puente heredado. El segundo se denomina problema del sintetizador de proxy virtual. El tercer problema es el de la invocación asíncrona.

El problema del puente heredado puede enunciarse del siguiente modo: dado un gran número de métodos en una variedad de clases, construir un puente a estos métodos para que haya una reutilización de las implementaciones en el código existente. Estamos sujetos a la restricción de que no podemos cambiar el código existente. Además, es posible que ni siquiera dispongamos del código fuente existente. 

El problema del puente heredado se resuelve creando código que implemente el patrón puente. El código puente consiste en una interfaz o protocolo de comunicación y una implementación de la comunicación. El código heredado suele ser frágil, difícil de mantener, de ingeniería inversa, inalterable y, a veces, mal diseñado. De ahí la restricción de no poder cambiar el código heredado. 

El problema de la invocación asíncrona puede plantearse del siguiente modo: dado un conjunto de invocaciones síncronas, con retornos síncronos, encontrar un patrón de diseño que permita invocaciones asíncronas con retornos asíncronos. La alternativa es bloquear el hilo de ejecución de los invocadores.


